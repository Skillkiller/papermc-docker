name: Version test
on:
  workflow_dispatch:

jobs:
  get-versions:
    name: Get all minecraft versions
    runs-on: ubuntu-latest
    outputs:
      mc-versions: ${{steps.get-mc-versions.outputs.mc-versions }}
    steps:
      - name: Get minecraft versions
        id: get-mc-versions
        run: |
          echo "mc-versions=$(curl -s -H 'accept: application/json' -H "User-Agent: ${GITHUB_REPOSITORY,,}" "https://fill.papermc.io/v3/projects/paper/versions" | jq -c '[.versions[] | {MC_VERSION: .version.id, JAVA_VERSION: .version.java.version.minimum}]')" >> "$GITHUB_OUTPUT"
  build-images:
    name: Build docker images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [11, 17, 21]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Lowercase repo name
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          tags: ${{ env.REPO }}:jdk-${{ matrix.java-version }}
          build-args: MINEBASE_IMAGE=jdk-${{ matrix.java-version }}
          outputs: type=docker,dest=${{ runner.temp }}/papermc-jdk-${{ matrix.java-version }}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: papermc-jdk-${{ matrix.java-version }}.tar
          path: ${{ runner.temp }}/papermc-jdk-${{ matrix.java-version }}.tar
  produce-artifacts:
    runs-on: ubuntu-latest
    needs: [get-versions, build-images]
    strategy:
      fail-fast: false
      matrix:
        mc-version: ${{ fromJson(needs.get-versions.outputs.mc-versions) }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: papermc-jdk-${{ matrix.mc-version.JAVA_VERSION }}.tar
          path: ${{ runner.temp }}
      - name: Load image
        run: |
          docker load --input ${{ runner.temp }}/papermc-jdk-${{ matrix.mc-version.JAVA_VERSION }}.tar
          docker image ls -a
      - name: Define Color
        env:
          MC_VERSION: ${{ matrix.mc-version.MC_VERSION }}
          JAVA_VERSION: ${{ matrix.mc-version.JAVA_VERSION }}
        run: echo "MC $MC_VERSION - Java $JAVA_VERSION"
      - name: Start mc server
        env:
          MC_VERSION: ${{ matrix.mc-version.MC_VERSION }}
          JAVA_VERSION: ${{ matrix.mc-version.JAVA_VERSION }}
        run: timeout 30 docker run -e "VERSION=${{ matrix.mc-version.MC_VERSION }}" --rm skillkiller/papermc-docker:jdk-${{ matrix.mc-version.JAVA_VERSION }}
